openapi: 3.0.0
info:
  title: Timesheet Submission API
  version: 1.0.0
  description: API for managing timesheet submissions, approvals, and reports.
servers:
  - url: http://localhost:3000/api
paths:
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  minLength: 3
                  maxLength: 100
                  description: The email of the user, must be a valid email address.
                password:
                  type: string
                  minLength: 8
                  maxLength: 100
                  description: The password of the user, must be between 8 and 100 characters.
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized

  /auth/register:
    post:
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, role]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                role:
                  type: string
                  enum: [Admin, Recruiter, Contractor]
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad request

  /contractor/timesheet:
    post:
      summary: Submit a weekly timesheet
      description: Allows a contractor to submit a weekly timesheet.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Timesheet'
      responses:
        '201':
          description: Timesheet submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timesheet'
        '400':
          description: Bad request

  /contractor/timesheets:
    get:
      summary: Get all timesheets submitted by the contractor
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of contractor's timesheets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Timesheet'

  /admin/timesheets:
    get:
      summary: View all timesheets
      description: Retrieve a list of all submitted timesheets for administrative purposes.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of all timesheets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Timesheet'

  /admin/export:
    get:
      summary: Export timesheet reports
      description: Export all timesheet data as a report (e.g., CSV or JSON).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Exported report
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: URL to download the exported report
  
  /admin/projects:
    post:
      summary: Create a new project
      description: Allows an admin to create a new project.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Bad request
    get:
      summary: View all projects
      description: Allows an admin to view all projects.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of all projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'

  /recruiter/candidates:
    get:
      summary: View candidates recruited by the recruiter
      description: Retrieves a list of candidates associated with the recruiter.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of candidates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /recruiter/candidates/{id}/approve:
    post:
      summary: Approve a candidate
      description: Allows a recruiter to approve a candidate by their ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the candidate
          schema:
            type: string
      responses:
        '200':
          description: Candidate approved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: Unauthorized action
        '404':
          description: Candidate not found

  /recruiter/candidates/{id}/reject:
    post:
      summary: Reject a candidate
      description: Allows a recruiter to reject a candidate by their ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the candidate
          schema:
            type: string
      responses:
        '200':
          description: Candidate rejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: Unauthorized action
        '404':
          description: Candidate not found
  

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Project:
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier of the project.
        name:
          type: string
          description: The name of the project.
        description:
          type: string
          description: A description of the project.
        created_at:
          type: string
          format: date-time
          description: The date and time the project was created.
        updated_at:
          type: string
          format: date-time
          description: The date and time the project was last updated.
    Timesheet:
      type: object
      properties:
        id:
          type: string
        project:
          type: string
        hours:
          type: integer
        notes:
          type: string
        recruiter:
          type: string
        status:
          type: string
      required: [project, hours, recruiter]
    User:
      type: object
      properties:
        email:
          type: string
        role:
          type: string
        token:
          type: string
      required: [email, role, token]
